@using NYB.DeviceManagementSystem.ViewModel;
@using NYB.DeviceManagementSystem.Common;
@using NYB.DeviceManagementSystem.Common.Enum;

@model NYB.DeviceManagementSystem.ViewModel.WebDevice
@{
    ViewBag.Title = "";
    string returnUrl = ViewBag.ReturnUrl;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<link rel="Stylesheet" href="@Url.Content("~/Content/Common/OperateTable.css")" />
<script src="@Url.Content("~/Scripts/Device/CreateEditPartial.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery.ui.datepicker-zh-CN.js")" type="text/javascript"></script>
<div leftname="设备信息" actionname="设备管理">
    <form action="AddUser" method="post">
        @(Html.Hidden("returnUrl", returnUrl))
        <div class="common-details-panel">
            <h2>添加设备信息</h2>
            @Html.HiddenFor(model => model.ID)
            <fieldset>
                <table class="operateTable">
                    <tr>
                        <td>
                            <b><em>*</em>设备编号</b>
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Num)
                            @Html.ValidationMessageFor(model => model.Num)
                        </td>
                        <td>
                            <b><em>*</em>设备名称</b>
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b><em>*</em>设备类型</b>
                        </td>
                        <td>
                            @*@Html.TextBoxFor(model => model.DeviceTypeID)
                                @Html.ValidationMessageFor(model => model.DeviceTypeID)*@
                            <select value="" name="DeviceTypeID">
                                @foreach (KeyValuePair<string, string> dic in (Dictionary<string, string>)ViewBag.DeviceType)
                                {
                                    <option @(dic.Key == Model.DeviceTypeID ? "selected" : "") id="firstOption" value="@dic.Key">@dic.Value</option>

                                }
                            </select>

                        </td>

                        <td>
                            <b><em>*</em>供应商</b>
                        </td>
                        <td>
                            @*@Html.TextBoxFor(model => model.SupplierID)
                                @Html.ValidationMessageFor(model => model.SupplierID)*@
                            <select value="" name="SupplierID">
                                @foreach (KeyValuePair<string, string> dic in (Dictionary<string, string>)ViewBag.SupperList)
                                {
                                    <option @(dic.Key == Model.SupplierID ? "selected" : "") id="firstOption" value="@dic.Key">@dic.Value</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b><em>*</em>生产厂商</b>
                        </td>
                        <td>
                            @*@Html.TextBoxFor(model => model.ManufacturerID)
                                @Html.ValidationMessageFor(model => model.ManufacturerID)*@

                            <select value="" name="ManufacturerID">
                                @foreach (KeyValuePair<string, string> dic in (Dictionary<string, string>)ViewBag.ManufacturList)
                                {
                                    <option @(dic.Key == Model.ManufacturerID ? "selected" : "") id="firstOption" value="@dic.Key">@dic.Value</option>
                                }
                            </select>
                        </td>
                        <td>
                            <b>保养日期</b>
                        </td>
                        <td name="time">
                            @Html.TextBoxFor(model => model.MaintainDate)
                            @Html.ValidationMessageFor(model => model.MaintainDate)
                        </td>
                    </tr>
                    <tr>
                        @if (ViewBag.Action == "Update")
                        {
                            <td>
                                <b>设备状态</b>
                            </td>
                            <td name="time">
                                <select value="" name="DeviceState">
                                    @foreach (string item in Enum.GetNames(typeof(DeviceStateEnum)))
                                    {
                                        <option id="firstOption" @(Model.DeviceState.ToString() == item ? "selected" : "") value="@((int)Enum.Parse(typeof(DeviceStateEnum),item) )">@item</option>
                                    }
                                </select>
                            </td>
                        }
                        <td>
                            <b>生产日期</b>
                        </td>
                        <td name="time">
                            @Html.TextBoxFor(model => model.ProductDate)
                            @Html.ValidationMessageFor(model => model.ProductDate)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b>备注</b>
                        </td>
                        <td wt="570" ht="80" class="lengthTd">
                            @Html.TextAreaFor(model => model.Note)
                            @Html.ValidationMessageFor(model => model.Note)
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>
        <div class="common-details-operation-panel">
            <p class="UpdatePile-btn">
                <input type="submit" id="btnSave" value="保存" class="blue-button" />
                <a class="link-after-button" href="@ViewBag.ReturnUrl">返回</a>
            </p>
        </div>
    </form>
</div>
<link href="@Url.Content("~/Content/Plugin/jQuery-UI/jquery-ui-1.8.16.custom.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/Plugin/jQuery-UI-Timepicker/jquery-ui-timepicker.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    window.Resource = {
        UrlAdd: '@Url.Action("CreateDevice", "Device", new { _ = DateTime.Now.Ticks })',
        UrlEdit: '@Url.Action("EditDevice", "Device", new { _ = DateTime.Now.Ticks })',
        ReturnUrl: $('#returnUrl').val(),
        UrlAction: '@ViewBag.Action',
        UrlImage: '@Url.Content("~/Content/Plugin/jQuery-UI-Timepicker/images/calendar.png")'
    }

    $(document).ready(function () {
        SaveEvent();
        BindDatePick();
        AddTxtAre();

    })

    function BindDatePick() {
        var path = Resource.UrlImage;
        $('td[name="time"] input').datepicker({
            showButtonPanel: true,
            yearRange: 'c-10:c+2',
            showOn: "button", buttonImageOnly: true,
            numberOfMonths: 1,
            changeMonth: true,
            changeYear: true,
            buttonImage: path
        }).datepicker("option", "dateFormat", 'yy-mm-dd');;
        BindDatePickerTriggerEvent();
        $('td[name="time"] input').attr('readonly', 'readonly');

        if (Resource.UrlAction == 'Update') {
            $('#ProductDate').val('@(Model.ProductDate.HasValue?  Model.ProductDate.Value.ToString("yyyy-MM-dd"):"")');
            $('#MaintainDate').val('@(Model.MaintainDate.HasValue? Model.MaintainDate.Value.ToString("yyyy-MM-dd"):"")');
        }
        

    }

</script>